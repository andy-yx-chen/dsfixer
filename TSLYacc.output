Terminals unused in grammar

   INC_OP
   DEC_OP
   CONTINUE
   BREAK
   RETURN


Grammar

    0 $accept: translation_unit $end

    1 primary_expression: IDENTIFIER
    2                   | CONSTANT
    3                   | STRING_LITERAL
    4                   | VARIANT
    5                   | '(' expression ')'

    6 op_expression: IDENTIFIER '.' IDENTIFIER

    7 postfix_expression: primary_expression
    8                   | postfix_expression '(' argument_expression_list ')'
    9                   | op_expression '(' argument_expression_list ')'

   10 argument_expression_list: /* empty */
   11                         | assignment_expression
   12                         | argument_expression_list ',' assignment_expression

   13 unary_expression: postfix_expression
   14                 | '!' unary_expression

   15 multiplicative_expression: unary_expression
   16                          | multiplicative_expression '*' postfix_expression
   17                          | multiplicative_expression '/' postfix_expression
   18                          | multiplicative_expression '%' postfix_expression

   19 additive_expression: multiplicative_expression
   20                    | additive_expression '+' multiplicative_expression
   21                    | additive_expression '-' multiplicative_expression

   22 relational_expression: additive_expression
   23                      | relational_expression '<' additive_expression
   24                      | relational_expression '>' additive_expression
   25                      | relational_expression LE_OP additive_expression
   26                      | relational_expression GE_OP additive_expression

   27 equality_expression: relational_expression
   28                    | equality_expression EQ_OP relational_expression
   29                    | equality_expression NE_OP relational_expression

   30 logical_and_expression: equality_expression
   31                       | logical_and_expression AND_OP equality_expression

   32 logical_or_expression: logical_and_expression
   33                      | logical_or_expression OR_OP logical_and_expression

   34 conditional_expression: logical_or_expression
   35                       | logical_or_expression '?' expression ':' conditional_expression

   36 assignment_expression: conditional_expression
   37                      | postfix_expression assignment_operator assignment_expression

   38 assignment_operator: '='
   39                    | MUL_ASSIGN
   40                    | DIV_ASSIGN
   41                    | MOD_ASSIGN
   42                    | ADD_ASSIGN
   43                    | SUB_ASSIGN

   44 expression: assignment_expression
   45           | expression ',' assignment_expression

   46 identifier_list: /* empty */
   47                | VARIANT
   48                | identifier_list ',' VARIANT

   49 statement: compound_statement
   50          | expression_statement
   51          | selection_statement
   52          | iteration_statement
   53          | function_definition

   54 compound_statement: '{' '}'
   55                   | '{' statement_list '}'

   56 statement_list: statement
   57               | statement_list statement

   58 expression_statement: ';'
   59                     | expression ';'

   60 selection_statement: IF '(' expression ')' statement
   61                    | IF '(' expression ')' statement ELSE statement

   62 iteration_statement: WHILE '(' expression ')' statement
   63                    | DO statement WHILE '(' expression ')' ';'
   64                    | FOR '(' expression_statement expression_statement expression ')' statement

   65 translation_unit: statement_list

   66 function_definition: FUNCTION IDENTIFIER '(' identifier_list ')' compound_statement


Terminals, with rules where they appear

$end (0) 0
'!' (33) 14
'%' (37) 18
'(' (40) 5 8 9 60 61 62 63 64 66
')' (41) 5 8 9 60 61 62 63 64 66
'*' (42) 16
'+' (43) 20
',' (44) 12 45 48
'-' (45) 21
'.' (46) 6
'/' (47) 17
':' (58) 35
';' (59) 58 59 63
'<' (60) 23
'=' (61) 38
'>' (62) 24
'?' (63) 35
'{' (123) 54 55
'}' (125) 54 55
error (256)
IDENTIFIER (258) 1 6 66
CONSTANT (259) 2
STRING_LITERAL (260) 3
VARIANT (261) 4 47 48
INC_OP (262)
DEC_OP (263)
LE_OP (264) 25
GE_OP (265) 26
EQ_OP (266) 28
NE_OP (267) 29
AND_OP (268) 31
OR_OP (269) 33
MUL_ASSIGN (270) 39
DIV_ASSIGN (271) 40
MOD_ASSIGN (272) 41
ADD_ASSIGN (273) 42
SUB_ASSIGN (274) 43
IFX (275)
ELSE (276) 61
IF (277) 60 61
WHILE (278) 62 63
DO (279) 63
FOR (280) 64
CONTINUE (281)
BREAK (282)
RETURN (283)
FUNCTION (284) 66


Nonterminals, with rules where they appear

$accept (48)
    on left: 0
primary_expression (49)
    on left: 1 2 3 4 5, on right: 7
op_expression (50)
    on left: 6, on right: 9
postfix_expression (51)
    on left: 7 8 9, on right: 8 13 16 17 18 37
argument_expression_list (52)
    on left: 10 11 12, on right: 8 9 12
unary_expression (53)
    on left: 13 14, on right: 14 15
multiplicative_expression (54)
    on left: 15 16 17 18, on right: 16 17 18 19 20 21
additive_expression (55)
    on left: 19 20 21, on right: 20 21 22 23 24 25 26
relational_expression (56)
    on left: 22 23 24 25 26, on right: 23 24 25 26 27 28 29
equality_expression (57)
    on left: 27 28 29, on right: 28 29 30 31
logical_and_expression (58)
    on left: 30 31, on right: 31 32 33
logical_or_expression (59)
    on left: 32 33, on right: 33 34 35
conditional_expression (60)
    on left: 34 35, on right: 35 36
assignment_expression (61)
    on left: 36 37, on right: 11 12 37 44 45
assignment_operator (62)
    on left: 38 39 40 41 42 43, on right: 37
expression (63)
    on left: 44 45, on right: 5 35 45 59 60 61 62 63 64
identifier_list (64)
    on left: 46 47 48, on right: 48 66
statement (65)
    on left: 49 50 51 52 53, on right: 56 57 60 61 62 63 64
compound_statement (66)
    on left: 54 55, on right: 49 66
statement_list (67)
    on left: 56 57, on right: 55 57 65
expression_statement (68)
    on left: 58 59, on right: 50 64
selection_statement (69)
    on left: 60 61, on right: 51
iteration_statement (70)
    on left: 62 63 64, on right: 52
translation_unit (71)
    on left: 65, on right: 0
function_definition (72)
    on left: 66, on right: 53


state 0

    0 $accept: . translation_unit $end

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    DO              shift, and go to state 7
    FOR             shift, and go to state 8
    FUNCTION        shift, and go to state 9
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    '{'             shift, and go to state 12
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    statement                  go to state 27
    compound_statement         go to state 28
    statement_list             go to state 29
    expression_statement       go to state 30
    selection_statement        go to state 31
    iteration_statement        go to state 32
    translation_unit           go to state 33
    function_definition        go to state 34


state 1

    1 primary_expression: IDENTIFIER .
    6 op_expression: IDENTIFIER . '.' IDENTIFIER

    '.'  shift, and go to state 35

    $default  reduce using rule 1 (primary_expression)


state 2

    2 primary_expression: CONSTANT .

    $default  reduce using rule 2 (primary_expression)


state 3

    3 primary_expression: STRING_LITERAL .

    $default  reduce using rule 3 (primary_expression)


state 4

    4 primary_expression: VARIANT .

    $default  reduce using rule 4 (primary_expression)


state 5

   60 selection_statement: IF . '(' expression ')' statement
   61                    | IF . '(' expression ')' statement ELSE statement

    '('  shift, and go to state 36


state 6

   62 iteration_statement: WHILE . '(' expression ')' statement

    '('  shift, and go to state 37


state 7

   63 iteration_statement: DO . statement WHILE '(' expression ')' ';'

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    DO              shift, and go to state 7
    FOR             shift, and go to state 8
    FUNCTION        shift, and go to state 9
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    '{'             shift, and go to state 12
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    statement                  go to state 38
    compound_statement         go to state 28
    expression_statement       go to state 30
    selection_statement        go to state 31
    iteration_statement        go to state 32
    function_definition        go to state 34


state 8

   64 iteration_statement: FOR . '(' expression_statement expression_statement expression ')' statement

    '('  shift, and go to state 39


state 9

   66 function_definition: FUNCTION . IDENTIFIER '(' identifier_list ')' compound_statement

    IDENTIFIER  shift, and go to state 40


state 10

    5 primary_expression: '(' . expression ')'

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 41


state 11

   14 unary_expression: '!' . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression  go to state 14
    op_expression       go to state 15
    postfix_expression  go to state 42
    unary_expression    go to state 43


state 12

   54 compound_statement: '{' . '}'
   55                   | '{' . statement_list '}'

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    DO              shift, and go to state 7
    FOR             shift, and go to state 8
    FUNCTION        shift, and go to state 9
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    '{'             shift, and go to state 12
    '}'             shift, and go to state 44
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    statement                  go to state 27
    compound_statement         go to state 28
    statement_list             go to state 45
    expression_statement       go to state 30
    selection_statement        go to state 31
    iteration_statement        go to state 32
    function_definition        go to state 34


state 13

   58 expression_statement: ';' .

    $default  reduce using rule 58 (expression_statement)


state 14

    7 postfix_expression: primary_expression .

    $default  reduce using rule 7 (postfix_expression)


state 15

    9 postfix_expression: op_expression . '(' argument_expression_list ')'

    '('  shift, and go to state 46


state 16

    8 postfix_expression: postfix_expression . '(' argument_expression_list ')'
   13 unary_expression: postfix_expression .
   37 assignment_expression: postfix_expression . assignment_operator assignment_expression

    MUL_ASSIGN  shift, and go to state 47
    DIV_ASSIGN  shift, and go to state 48
    MOD_ASSIGN  shift, and go to state 49
    ADD_ASSIGN  shift, and go to state 50
    SUB_ASSIGN  shift, and go to state 51
    '('         shift, and go to state 52
    '='         shift, and go to state 53

    $default  reduce using rule 13 (unary_expression)

    assignment_operator  go to state 54


state 17

   15 multiplicative_expression: unary_expression .

    $default  reduce using rule 15 (multiplicative_expression)


state 18

   16 multiplicative_expression: multiplicative_expression . '*' postfix_expression
   17                          | multiplicative_expression . '/' postfix_expression
   18                          | multiplicative_expression . '%' postfix_expression
   19 additive_expression: multiplicative_expression .

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '%'  shift, and go to state 57

    $default  reduce using rule 19 (additive_expression)


state 19

   20 additive_expression: additive_expression . '+' multiplicative_expression
   21                    | additive_expression . '-' multiplicative_expression
   22 relational_expression: additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 22 (relational_expression)


state 20

   23 relational_expression: relational_expression . '<' additive_expression
   24                      | relational_expression . '>' additive_expression
   25                      | relational_expression . LE_OP additive_expression
   26                      | relational_expression . GE_OP additive_expression
   27 equality_expression: relational_expression .

    LE_OP  shift, and go to state 60
    GE_OP  shift, and go to state 61
    '<'    shift, and go to state 62
    '>'    shift, and go to state 63

    $default  reduce using rule 27 (equality_expression)


state 21

   28 equality_expression: equality_expression . EQ_OP relational_expression
   29                    | equality_expression . NE_OP relational_expression
   30 logical_and_expression: equality_expression .

    EQ_OP  shift, and go to state 64
    NE_OP  shift, and go to state 65

    $default  reduce using rule 30 (logical_and_expression)


state 22

   31 logical_and_expression: logical_and_expression . AND_OP equality_expression
   32 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 66

    $default  reduce using rule 32 (logical_or_expression)


state 23

   33 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   34 conditional_expression: logical_or_expression .
   35                       | logical_or_expression . '?' expression ':' conditional_expression

    OR_OP  shift, and go to state 67
    '?'    shift, and go to state 68

    $default  reduce using rule 34 (conditional_expression)


state 24

   36 assignment_expression: conditional_expression .

    $default  reduce using rule 36 (assignment_expression)


state 25

   44 expression: assignment_expression .

    $default  reduce using rule 44 (expression)


state 26

   45 expression: expression . ',' assignment_expression
   59 expression_statement: expression . ';'

    ','  shift, and go to state 69
    ';'  shift, and go to state 70


state 27

   56 statement_list: statement .

    $default  reduce using rule 56 (statement_list)


state 28

   49 statement: compound_statement .

    $default  reduce using rule 49 (statement)


state 29

   57 statement_list: statement_list . statement
   65 translation_unit: statement_list .

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    DO              shift, and go to state 7
    FOR             shift, and go to state 8
    FUNCTION        shift, and go to state 9
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    '{'             shift, and go to state 12
    ';'             shift, and go to state 13

    $default  reduce using rule 65 (translation_unit)

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    statement                  go to state 71
    compound_statement         go to state 28
    expression_statement       go to state 30
    selection_statement        go to state 31
    iteration_statement        go to state 32
    function_definition        go to state 34


state 30

   50 statement: expression_statement .

    $default  reduce using rule 50 (statement)


state 31

   51 statement: selection_statement .

    $default  reduce using rule 51 (statement)


state 32

   52 statement: iteration_statement .

    $default  reduce using rule 52 (statement)


state 33

    0 $accept: translation_unit . $end

    $end  shift, and go to state 72


state 34

   53 statement: function_definition .

    $default  reduce using rule 53 (statement)


state 35

    6 op_expression: IDENTIFIER '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 73


state 36

   60 selection_statement: IF '(' . expression ')' statement
   61                    | IF '(' . expression ')' statement ELSE statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 74


state 37

   62 iteration_statement: WHILE '(' . expression ')' statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 75


state 38

   63 iteration_statement: DO statement . WHILE '(' expression ')' ';'

    WHILE  shift, and go to state 76


state 39

   64 iteration_statement: FOR '(' . expression_statement expression_statement expression ')' statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    expression_statement       go to state 77


state 40

   66 function_definition: FUNCTION IDENTIFIER . '(' identifier_list ')' compound_statement

    '('  shift, and go to state 78


state 41

    5 primary_expression: '(' expression . ')'
   45 expression: expression . ',' assignment_expression

    ')'  shift, and go to state 79
    ','  shift, and go to state 69


state 42

    8 postfix_expression: postfix_expression . '(' argument_expression_list ')'
   13 unary_expression: postfix_expression .

    '('  shift, and go to state 52

    $default  reduce using rule 13 (unary_expression)


state 43

   14 unary_expression: '!' unary_expression .

    $default  reduce using rule 14 (unary_expression)


state 44

   54 compound_statement: '{' '}' .

    $default  reduce using rule 54 (compound_statement)


state 45

   55 compound_statement: '{' statement_list . '}'
   57 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    DO              shift, and go to state 7
    FOR             shift, and go to state 8
    FUNCTION        shift, and go to state 9
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    '{'             shift, and go to state 12
    '}'             shift, and go to state 80
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    statement                  go to state 71
    compound_statement         go to state 28
    expression_statement       go to state 30
    selection_statement        go to state 31
    iteration_statement        go to state 32
    function_definition        go to state 34


state 46

    9 postfix_expression: op_expression '(' . argument_expression_list ')'

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    $default  reduce using rule 10 (argument_expression_list)

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    argument_expression_list   go to state 81
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 82


state 47

   39 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 39 (assignment_operator)


state 48

   40 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 40 (assignment_operator)


state 49

   41 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 41 (assignment_operator)


state 50

   42 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 42 (assignment_operator)


state 51

   43 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 43 (assignment_operator)


state 52

    8 postfix_expression: postfix_expression '(' . argument_expression_list ')'

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    $default  reduce using rule 10 (argument_expression_list)

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    argument_expression_list   go to state 83
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 82


state 53

   38 assignment_operator: '=' .

    $default  reduce using rule 38 (assignment_operator)


state 54

   37 assignment_expression: postfix_expression assignment_operator . assignment_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 84


state 55

   16 multiplicative_expression: multiplicative_expression '*' . postfix_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10

    primary_expression  go to state 14
    op_expression       go to state 15
    postfix_expression  go to state 85


state 56

   17 multiplicative_expression: multiplicative_expression '/' . postfix_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10

    primary_expression  go to state 14
    op_expression       go to state 15
    postfix_expression  go to state 86


state 57

   18 multiplicative_expression: multiplicative_expression '%' . postfix_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10

    primary_expression  go to state 14
    op_expression       go to state 15
    postfix_expression  go to state 87


state 58

   20 additive_expression: additive_expression '+' . multiplicative_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 88


state 59

   21 additive_expression: additive_expression '-' . multiplicative_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 89


state 60

   25 relational_expression: relational_expression LE_OP . additive_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 90


state 61

   26 relational_expression: relational_expression GE_OP . additive_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 91


state 62

   23 relational_expression: relational_expression '<' . additive_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 92


state 63

   24 relational_expression: relational_expression '>' . additive_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 93


state 64

   28 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 94


state 65

   29 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 95


state 66

   31 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 96


state 67

   33 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 97


state 68

   35 conditional_expression: logical_or_expression '?' . expression ':' conditional_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 98


state 69

   45 expression: expression ',' . assignment_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 99


state 70

   59 expression_statement: expression ';' .

    $default  reduce using rule 59 (expression_statement)


state 71

   57 statement_list: statement_list statement .

    $default  reduce using rule 57 (statement_list)


state 72

    0 $accept: translation_unit $end .

    $default  accept


state 73

    6 op_expression: IDENTIFIER '.' IDENTIFIER .

    $default  reduce using rule 6 (op_expression)


state 74

   45 expression: expression . ',' assignment_expression
   60 selection_statement: IF '(' expression . ')' statement
   61                    | IF '(' expression . ')' statement ELSE statement

    ')'  shift, and go to state 100
    ','  shift, and go to state 69


state 75

   45 expression: expression . ',' assignment_expression
   62 iteration_statement: WHILE '(' expression . ')' statement

    ')'  shift, and go to state 101
    ','  shift, and go to state 69


state 76

   63 iteration_statement: DO statement WHILE . '(' expression ')' ';'

    '('  shift, and go to state 102


state 77

   64 iteration_statement: FOR '(' expression_statement . expression_statement expression ')' statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    expression_statement       go to state 103


state 78

   66 function_definition: FUNCTION IDENTIFIER '(' . identifier_list ')' compound_statement

    VARIANT  shift, and go to state 104

    $default  reduce using rule 46 (identifier_list)

    identifier_list  go to state 105


state 79

    5 primary_expression: '(' expression ')' .

    $default  reduce using rule 5 (primary_expression)


state 80

   55 compound_statement: '{' statement_list '}' .

    $default  reduce using rule 55 (compound_statement)


state 81

    9 postfix_expression: op_expression '(' argument_expression_list . ')'
   12 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 106
    ','  shift, and go to state 107


state 82

   11 argument_expression_list: assignment_expression .

    $default  reduce using rule 11 (argument_expression_list)


state 83

    8 postfix_expression: postfix_expression '(' argument_expression_list . ')'
   12 argument_expression_list: argument_expression_list . ',' assignment_expression

    ')'  shift, and go to state 108
    ','  shift, and go to state 107


state 84

   37 assignment_expression: postfix_expression assignment_operator assignment_expression .

    $default  reduce using rule 37 (assignment_expression)


state 85

    8 postfix_expression: postfix_expression . '(' argument_expression_list ')'
   16 multiplicative_expression: multiplicative_expression '*' postfix_expression .

    '('  shift, and go to state 52

    $default  reduce using rule 16 (multiplicative_expression)


state 86

    8 postfix_expression: postfix_expression . '(' argument_expression_list ')'
   17 multiplicative_expression: multiplicative_expression '/' postfix_expression .

    '('  shift, and go to state 52

    $default  reduce using rule 17 (multiplicative_expression)


state 87

    8 postfix_expression: postfix_expression . '(' argument_expression_list ')'
   18 multiplicative_expression: multiplicative_expression '%' postfix_expression .

    '('  shift, and go to state 52

    $default  reduce using rule 18 (multiplicative_expression)


state 88

   16 multiplicative_expression: multiplicative_expression . '*' postfix_expression
   17                          | multiplicative_expression . '/' postfix_expression
   18                          | multiplicative_expression . '%' postfix_expression
   20 additive_expression: additive_expression '+' multiplicative_expression .

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '%'  shift, and go to state 57

    $default  reduce using rule 20 (additive_expression)


state 89

   16 multiplicative_expression: multiplicative_expression . '*' postfix_expression
   17                          | multiplicative_expression . '/' postfix_expression
   18                          | multiplicative_expression . '%' postfix_expression
   21 additive_expression: additive_expression '-' multiplicative_expression .

    '*'  shift, and go to state 55
    '/'  shift, and go to state 56
    '%'  shift, and go to state 57

    $default  reduce using rule 21 (additive_expression)


state 90

   20 additive_expression: additive_expression . '+' multiplicative_expression
   21                    | additive_expression . '-' multiplicative_expression
   25 relational_expression: relational_expression LE_OP additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 25 (relational_expression)


state 91

   20 additive_expression: additive_expression . '+' multiplicative_expression
   21                    | additive_expression . '-' multiplicative_expression
   26 relational_expression: relational_expression GE_OP additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 26 (relational_expression)


state 92

   20 additive_expression: additive_expression . '+' multiplicative_expression
   21                    | additive_expression . '-' multiplicative_expression
   23 relational_expression: relational_expression '<' additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 23 (relational_expression)


state 93

   20 additive_expression: additive_expression . '+' multiplicative_expression
   21                    | additive_expression . '-' multiplicative_expression
   24 relational_expression: relational_expression '>' additive_expression .

    '+'  shift, and go to state 58
    '-'  shift, and go to state 59

    $default  reduce using rule 24 (relational_expression)


state 94

   23 relational_expression: relational_expression . '<' additive_expression
   24                      | relational_expression . '>' additive_expression
   25                      | relational_expression . LE_OP additive_expression
   26                      | relational_expression . GE_OP additive_expression
   28 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP  shift, and go to state 60
    GE_OP  shift, and go to state 61
    '<'    shift, and go to state 62
    '>'    shift, and go to state 63

    $default  reduce using rule 28 (equality_expression)


state 95

   23 relational_expression: relational_expression . '<' additive_expression
   24                      | relational_expression . '>' additive_expression
   25                      | relational_expression . LE_OP additive_expression
   26                      | relational_expression . GE_OP additive_expression
   29 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP  shift, and go to state 60
    GE_OP  shift, and go to state 61
    '<'    shift, and go to state 62
    '>'    shift, and go to state 63

    $default  reduce using rule 29 (equality_expression)


state 96

   28 equality_expression: equality_expression . EQ_OP relational_expression
   29                    | equality_expression . NE_OP relational_expression
   31 logical_and_expression: logical_and_expression AND_OP equality_expression .

    EQ_OP  shift, and go to state 64
    NE_OP  shift, and go to state 65

    $default  reduce using rule 31 (logical_and_expression)


state 97

   31 logical_and_expression: logical_and_expression . AND_OP equality_expression
   33 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 66

    $default  reduce using rule 33 (logical_or_expression)


state 98

   35 conditional_expression: logical_or_expression '?' expression . ':' conditional_expression
   45 expression: expression . ',' assignment_expression

    ','  shift, and go to state 69
    ':'  shift, and go to state 109


state 99

   45 expression: expression ',' assignment_expression .

    $default  reduce using rule 45 (expression)


state 100

   60 selection_statement: IF '(' expression ')' . statement
   61                    | IF '(' expression ')' . statement ELSE statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    DO              shift, and go to state 7
    FOR             shift, and go to state 8
    FUNCTION        shift, and go to state 9
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    '{'             shift, and go to state 12
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    statement                  go to state 110
    compound_statement         go to state 28
    expression_statement       go to state 30
    selection_statement        go to state 31
    iteration_statement        go to state 32
    function_definition        go to state 34


state 101

   62 iteration_statement: WHILE '(' expression ')' . statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    DO              shift, and go to state 7
    FOR             shift, and go to state 8
    FUNCTION        shift, and go to state 9
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    '{'             shift, and go to state 12
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    statement                  go to state 111
    compound_statement         go to state 28
    expression_statement       go to state 30
    selection_statement        go to state 31
    iteration_statement        go to state 32
    function_definition        go to state 34


state 102

   63 iteration_statement: DO statement WHILE '(' . expression ')' ';'

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 112


state 103

   64 iteration_statement: FOR '(' expression_statement expression_statement . expression ')' statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 113


state 104

   47 identifier_list: VARIANT .

    $default  reduce using rule 47 (identifier_list)


state 105

   48 identifier_list: identifier_list . ',' VARIANT
   66 function_definition: FUNCTION IDENTIFIER '(' identifier_list . ')' compound_statement

    ')'  shift, and go to state 114
    ','  shift, and go to state 115


state 106

    9 postfix_expression: op_expression '(' argument_expression_list ')' .

    $default  reduce using rule 9 (postfix_expression)


state 107

   12 argument_expression_list: argument_expression_list ',' . assignment_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 116


state 108

    8 postfix_expression: postfix_expression '(' argument_expression_list ')' .

    $default  reduce using rule 8 (postfix_expression)


state 109

   35 conditional_expression: logical_or_expression '?' expression ':' . conditional_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    '('             shift, and go to state 10
    '!'             shift, and go to state 11

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 42
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 117


state 110

   60 selection_statement: IF '(' expression ')' statement .
   61                    | IF '(' expression ')' statement . ELSE statement

    ELSE  shift, and go to state 118

    $default  reduce using rule 60 (selection_statement)


state 111

   62 iteration_statement: WHILE '(' expression ')' statement .

    $default  reduce using rule 62 (iteration_statement)


state 112

   45 expression: expression . ',' assignment_expression
   63 iteration_statement: DO statement WHILE '(' expression . ')' ';'

    ')'  shift, and go to state 119
    ','  shift, and go to state 69


state 113

   45 expression: expression . ',' assignment_expression
   64 iteration_statement: FOR '(' expression_statement expression_statement expression . ')' statement

    ')'  shift, and go to state 120
    ','  shift, and go to state 69


state 114

   66 function_definition: FUNCTION IDENTIFIER '(' identifier_list ')' . compound_statement

    '{'  shift, and go to state 12

    compound_statement  go to state 121


state 115

   48 identifier_list: identifier_list ',' . VARIANT

    VARIANT  shift, and go to state 122


state 116

   12 argument_expression_list: argument_expression_list ',' assignment_expression .

    $default  reduce using rule 12 (argument_expression_list)


state 117

   35 conditional_expression: logical_or_expression '?' expression ':' conditional_expression .

    $default  reduce using rule 35 (conditional_expression)


state 118

   61 selection_statement: IF '(' expression ')' statement ELSE . statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    DO              shift, and go to state 7
    FOR             shift, and go to state 8
    FUNCTION        shift, and go to state 9
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    '{'             shift, and go to state 12
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    statement                  go to state 123
    compound_statement         go to state 28
    expression_statement       go to state 30
    selection_statement        go to state 31
    iteration_statement        go to state 32
    function_definition        go to state 34


state 119

   63 iteration_statement: DO statement WHILE '(' expression ')' . ';'

    ';'  shift, and go to state 124


state 120

   64 iteration_statement: FOR '(' expression_statement expression_statement expression ')' . statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    VARIANT         shift, and go to state 4
    IF              shift, and go to state 5
    WHILE           shift, and go to state 6
    DO              shift, and go to state 7
    FOR             shift, and go to state 8
    FUNCTION        shift, and go to state 9
    '('             shift, and go to state 10
    '!'             shift, and go to state 11
    '{'             shift, and go to state 12
    ';'             shift, and go to state 13

    primary_expression         go to state 14
    op_expression              go to state 15
    postfix_expression         go to state 16
    unary_expression           go to state 17
    multiplicative_expression  go to state 18
    additive_expression        go to state 19
    relational_expression      go to state 20
    equality_expression        go to state 21
    logical_and_expression     go to state 22
    logical_or_expression      go to state 23
    conditional_expression     go to state 24
    assignment_expression      go to state 25
    expression                 go to state 26
    statement                  go to state 125
    compound_statement         go to state 28
    expression_statement       go to state 30
    selection_statement        go to state 31
    iteration_statement        go to state 32
    function_definition        go to state 34


state 121

   66 function_definition: FUNCTION IDENTIFIER '(' identifier_list ')' compound_statement .

    $default  reduce using rule 66 (function_definition)


state 122

   48 identifier_list: identifier_list ',' VARIANT .

    $default  reduce using rule 48 (identifier_list)


state 123

   61 selection_statement: IF '(' expression ')' statement ELSE statement .

    $default  reduce using rule 61 (selection_statement)


state 124

   63 iteration_statement: DO statement WHILE '(' expression ')' ';' .

    $default  reduce using rule 63 (iteration_statement)


state 125

   64 iteration_statement: FOR '(' expression_statement expression_statement expression ')' statement .

    $default  reduce using rule 64 (iteration_statement)
